{"version":3,"sources":["App.js","static/sun.png","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","feels_like","temp_min","temp_max","description","src","iconName","icon","weatherIcon","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAIMA,GCJS,IDKN,oCADHA,EAEI,0CAuFKC,MAnFf,WAAgB,IAAD,EAEeC,mBAAS,IAFxB,mBAEJC,EAFI,KAEGC,EAFH,OAGmBF,mBAAS,IAH5B,mBAGJG,EAHI,KAGKC,EAHL,KAyCb,OACE,qBAAKC,UACuB,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,KAAO,GAAM,WACjE,MAFN,SAGI,iCACI,qBAAKF,UAAU,aAAf,SACI,uBACIG,KAAK,OACLH,UAAU,aACVI,YAAY,sCACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WA/CD,SAAAC,GACM,UAAbA,EAAIC,KACJC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WA2CS,oBAAhBlB,EAAQG,KACjB,gCACI,sBAAKD,UAAU,eAAf,UACI,sBAAKA,UAAU,WAAf,cAA4BF,EAAQqB,KAApC,KAA4CrB,EAAQsB,IAAIC,QAAxD,OACA,qBAAKrB,UAAU,OAAf,SA1CI,SAACsB,GACjB,IAKIC,EAHO,CAAC,SAAU,SAAU,UAAW,YACvC,WAAY,SAAU,YAEXD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAPS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAC1D,OAAQ,SAAU,YAAa,UAAW,WAAY,YAMvCL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GA+BCE,CAAY,IAAIC,WAE3C,sBAAKhC,UAAU,cAAf,UAEI,sBAAKA,UAAU,cAAf,UAA8BiC,KAAKC,MAAMpC,EAAQG,KAAKC,MAAtD,YACA,sBAAKF,UAAU,WAAf,UACI,8CAAiBiC,KAAKC,MAAMpC,EAAQG,KAAKkC,YAAzC,WACA,uCAAUF,KAAKC,MAAMpC,EAAQG,KAAKmC,UAAlC,WACA,uCAAUH,KAAKC,MAAMpC,EAAQG,KAAKoC,UAAlC,cAEJ,qBAAKrC,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGwC,cAC7C,sBAAKtC,UAAU,eAAf,UAA8B,qBAAKuC,IAAG,iBAvClC,SAACjB,GAEjB,IAAIkB,EAAW1C,EAAQA,QAAQ,GAAG2C,KAElC,MAAM,GAAN,OAAUD,EAAV,QAmC8DE,IAAiBC,IAAI,iBAAvE,aAKP,SE1EEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.90868b49.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport sun from './static/sun.png';\n\n\nconst api = {\n    key: \"5682a655764a212e9c109f8f160bceda\",\n    base: \"http://api.openweathermap.org/data/2.5/\"\n}\n\n\nfunction App() {\n\n    const [query, setQuery] = useState('');\n    const [weather, setWeather] = useState({});\n\n//function to get data from api\n    const search = evt => {\n        if (evt.key  === \"Enter\"){\n            fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n            .then(res => res.json())\n            .then(result => {\n                setWeather(result);\n                setQuery('');\n                console.log(result);\n                });\n        }\n    }\n//datebuilder to bring current date\n    const dateBuilder = (d) => {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n            \"Thursday\", \"Friday\", \"Saturday\"];\n\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n        return `${day} ${date} ${month} ${year}`\n    }\n\n    const weatherIcon = (d) => {\n        //get name from api\n        let iconName = weather.weather[0].icon;\n\n        return `${iconName}.png`\n    }\n\n\n\n  return (\n    <div className={\n        (typeof weather.main != \"undefined\") ? ((weather.main.temp > 17) ? 'app warm' : 'app')\n        : 'app'}>\n        <main>\n            <div className=\"search-box\">\n                <input\n                    type=\"text\"\n                    className=\"search-bar\"\n                    placeholder=\"Search for location (e.g Athens,GR)\"\n                    onChange={e => setQuery(e.target.value)}\n                    value={query}\n                    onKeyPress={search}\n                />\n            </div>\n            {(typeof weather.main != \"undefined\") ? (\n            <div>\n                <div className=\"location-box\">\n                    <div className=\"location\"> {weather.name}, {weather.sys.country} </div>\n                    <div className=\"date\">{dateBuilder(new Date())}</div>\n                </div>\n                <div className=\"weather-box\">\n\n                    <div className=\"temperature\">{Math.round(weather.main.temp)}째C </div>\n                    <div className=\"realfeel\">\n                        <div>Feels like {Math.round(weather.main.feels_like)}째C</div>\n                        <div>Min {Math.round(weather.main.temp_min)}째C</div>\n                        <div>Max {Math.round(weather.main.temp_max)}째C</div>\n                    </div>\n                    <div className=\"weather\">{weather.weather[0].description}</div>\n                    <div className=\"weather-icon\"><img src={`assets/${weatherIcon()}`} alt=\"weather icon\"/> </div>\n\n\n                </div>\n            </div>\n        ) : ('')}\n        </main>\n\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/sun.0b7ed9b3.png\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}